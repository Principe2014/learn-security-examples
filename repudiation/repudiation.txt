- Briefly explain the vulnerability and why the secure version is better at preventing repudiation than the insecure version.
- What additional security mechanisms can you incorporate to prevent such attacks?

ANSWER: 

1. As the insecure server does not have any methods of identifying a user beyond the userid, it is nearly impossible to identify who is responsible for changes or determining who is accessing sensitive information. This could allow a hacker to corrupt data without being identified.
2. In secure.ts, authentication and authorization prevent a hacker from exploiting the server. Authentication ensures that the session is valid, while Authorization checks that a user has the right permissions to perform an action.
3. Session-based authentication is used to address the vulnerability. It works by creating a unique session on log in. It saves the session in the user's browser cookie, allowing it to authenticate subsequent requests. The session also expires after a fixed time, limiting the window a hacker might have to launch their attack.
